// Mocks generated by Mockito 5.4.4 from annotations
// in movies_api/test/core/network/network_status_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:connectivity_plus/connectivity_plus.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_api/core/network/network_status.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConnectivity_0 extends _i1.SmartFake implements _i2.Connectivity {
  _FakeConnectivity_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [NetworkStatusImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkStatusImpl extends _i1.Mock implements _i3.NetworkStatusImpl {
  @override
  _i2.Connectivity get connectivity => (super.noSuchMethod(
        Invocation.getter(#connectivity),
        returnValue: _FakeConnectivity_0(
          this,
          Invocation.getter(#connectivity),
        ),
        returnValueForMissingStub: _FakeConnectivity_0(
          this,
          Invocation.getter(#connectivity),
        ),
      ) as _i2.Connectivity);

  @override
  bool get isConnected => (super.noSuchMethod(
        Invocation.getter(#isConnected),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool get isWeb => (super.noSuchMethod(
        Invocation.getter(#isWeb),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void updateConnectionStatus(List<_i2.ConnectivityResult>? event) =>
      super.noSuchMethod(
        Invocation.method(
          #updateConnectionStatus,
          [event],
        ),
        returnValueForMissingStub: null,
      );
}

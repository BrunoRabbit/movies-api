// Mocks generated by Mockito 5.3.2 from annotations
// in movies_api/test/features/home_page/data/models/.models_generator.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:mockito/mockito.dart' as _i1;
import 'package:movies_api/features/home_page/data/models/config_model.dart'
    as _i2;
import 'package:movies_api/features/home_page/data/models/movie_model.dart'
    as _i3;
import 'package:movies_api/features/home_page/data/models/trending_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeConfigModel_0 extends _i1.SmartFake implements _i2.ConfigModel {
  _FakeConfigModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieModel_1 extends _i1.SmartFake implements _i3.MovieModel {
  _FakeMovieModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTrendingModel_2 extends _i1.SmartFake implements _i4.TrendingModel {
  _FakeTrendingModel_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ConfigModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockConfigModel extends _i1.Mock implements _i2.ConfigModel {
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i2.ConfigModel wrapperFromMap(Map<String, dynamic>? map) =>
      (super.noSuchMethod(
        Invocation.method(
          #wrapperFromMap,
          [map],
        ),
        returnValue: _FakeConfigModel_0(
          this,
          Invocation.method(
            #wrapperFromMap,
            [map],
          ),
        ),
        returnValueForMissingStub: _FakeConfigModel_0(
          this,
          Invocation.method(
            #wrapperFromMap,
            [map],
          ),
        ),
      ) as _i2.ConfigModel);
  @override
  _i2.ConfigModel wrapperFromJson(String? source) => (super.noSuchMethod(
        Invocation.method(
          #wrapperFromJson,
          [source],
        ),
        returnValue: _FakeConfigModel_0(
          this,
          Invocation.method(
            #wrapperFromJson,
            [source],
          ),
        ),
        returnValueForMissingStub: _FakeConfigModel_0(
          this,
          Invocation.method(
            #wrapperFromJson,
            [source],
          ),
        ),
      ) as _i2.ConfigModel);
}

/// A class which mocks [MovieModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieModel extends _i1.Mock implements _i3.MovieModel {
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i3.MovieModel wrapperFromMap(Map<String, dynamic>? map) =>
      (super.noSuchMethod(
        Invocation.method(
          #wrapperFromMap,
          [map],
        ),
        returnValue: _FakeMovieModel_1(
          this,
          Invocation.method(
            #wrapperFromMap,
            [map],
          ),
        ),
        returnValueForMissingStub: _FakeMovieModel_1(
          this,
          Invocation.method(
            #wrapperFromMap,
            [map],
          ),
        ),
      ) as _i3.MovieModel);
  @override
  _i3.MovieModel wrapperFromJson(String? source) => (super.noSuchMethod(
        Invocation.method(
          #wrapperFromJson,
          [source],
        ),
        returnValue: _FakeMovieModel_1(
          this,
          Invocation.method(
            #wrapperFromJson,
            [source],
          ),
        ),
        returnValueForMissingStub: _FakeMovieModel_1(
          this,
          Invocation.method(
            #wrapperFromJson,
            [source],
          ),
        ),
      ) as _i3.MovieModel);
}

/// A class which mocks [TrendingModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockTrendingModel extends _i1.Mock implements _i4.TrendingModel {
  @override
  List<Object?> get props => (super.noSuchMethod(
        Invocation.getter(#props),
        returnValue: <Object?>[],
        returnValueForMissingStub: <Object?>[],
      ) as List<Object?>);
  @override
  Map<String, dynamic> toMap() => (super.noSuchMethod(
        Invocation.method(
          #toMap,
          [],
        ),
        returnValue: <String, dynamic>{},
        returnValueForMissingStub: <String, dynamic>{},
      ) as Map<String, dynamic>);
  @override
  String toJson() => (super.noSuchMethod(
        Invocation.method(
          #toJson,
          [],
        ),
        returnValue: '',
        returnValueForMissingStub: '',
      ) as String);
  @override
  _i4.TrendingModel wrapperFromJson(String? source) => (super.noSuchMethod(
        Invocation.method(
          #wrapperFromJson,
          [source],
        ),
        returnValue: _FakeTrendingModel_2(
          this,
          Invocation.method(
            #wrapperFromJson,
            [source],
          ),
        ),
        returnValueForMissingStub: _FakeTrendingModel_2(
          this,
          Invocation.method(
            #wrapperFromJson,
            [source],
          ),
        ),
      ) as _i4.TrendingModel);
  @override
  _i4.TrendingModel wrapperFromMap(Map<String, dynamic>? map) =>
      (super.noSuchMethod(
        Invocation.method(
          #wrapperFromMap,
          [map],
        ),
        returnValue: _FakeTrendingModel_2(
          this,
          Invocation.method(
            #wrapperFromMap,
            [map],
          ),
        ),
        returnValueForMissingStub: _FakeTrendingModel_2(
          this,
          Invocation.method(
            #wrapperFromMap,
            [map],
          ),
        ),
      ) as _i4.TrendingModel);
}
